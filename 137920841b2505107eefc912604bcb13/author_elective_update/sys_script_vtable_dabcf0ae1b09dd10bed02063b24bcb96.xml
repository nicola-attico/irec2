<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script_vtable">
    <sys_script_vtable action="DELETE">
        <active>true</active>
        <advanced>false</advanced>
        <cache_isolation_level>USER</cache_isolation_level>
        <cache_strategy>CACHE_BY_QUERY</cache_strategy>
        <cache_ttl>0</cache_ttl>
        <name>Policy Creator Document</name>
        <script><![CDATA[(function executeQuery(v_table, v_query) {

    try {
        var u = new GlideRecord("x_snc_guardian_login")
        u.get("user", gs.getUserID())
        var jwt = u.jwt

        var vp_hash, policy_id, xxx
        if (v_query.getParameter("verifiable_presentation")) {
            vp_hash = v_query.getParameter("verifiable_presentation").split("@")[0].toString()
            //gs.addInfoMessage("vp_hash " + vp_hash)
            policy_id = v_query.getParameter("verifiable_presentation").split("@")[1].toString()
            //gs.addInfoMessage("policy_id " + policy_id)
        }

        if (v_query.isGet()) {
            vp_hash = v_query.getSysId().split("@")[0].toString()
            policy_id = v_query.getSysId().split("@")[1].toString()
        }

        var sm = new sn_ws.RESTMessageV2();
        sm.setEndpoint(gs.getProperty("x_snc_guardian.endpoint") + "/policies/" + policy_id + "/tag/trustChainBlock")
        sm.setHttpMethod("get")
        sm.setRequestHeader("authorization", "bearer " + jwt)
        var response = sm.execute()
        var responseBody = response.getBody();
        var httpStatus = response.getStatusCode();

        var body = JSON.parse(responseBody)
        var trustChainBlock_uuid = body.id
        //gs.addInfoMessage("trustChainBlock_uuid " + trustChainBlock_uuid)

        var sm2 = new sn_ws.RESTMessageV2();
        sm2.setEndpoint(gs.getProperty("x_snc_guardian.endpoint") + "/policies/" + policy_id + "/blocks/" + trustChainBlock_uuid)
        sm2.setHttpMethod("post")
        sm2.setRequestHeader("authorization", "bearer " + jwt)
        sm2.setRequestHeader("content-type", "application/json")
        sm2.setRequestBody('{ "filterValue": "' + vp_hash + '" }')
        //gs.addInfoMessage('{ "filterValue": "' + vp_hash + '" }')
        var response2 = sm2.execute()
        var responseBody2 = response2.getBody();
        var httpStatus2 = response2.getStatusCode();
        //gs.addInfoMessage("responseBody2 " + responseBody2)

        var sm3 = new sn_ws.RESTMessageV2();
        sm3.setEndpoint(gs.getProperty("x_snc_guardian.endpoint") + "/policies/" + policy_id + "/blocks/" + trustChainBlock_uuid)
        sm3.setHttpMethod("get")
        sm3.setRequestHeader("authorization", "bearer " + jwt)
        var response3 = sm3.execute()
        var responseBody3 = response3.getBody();
        //gs.addInfoMessage("responseBody3 " + responseBody3)
        var httpStatus3 = response3.getStatusCode();

        var data = JSON.parse(responseBody3).data.mintDocument

        //gs.addInfoMessage(JSON.stringify(JSON.parse(responseBody3).data))

        var row = {}

        //        if (data[i].id == device_id || device_id == undefined || device_id == null) {

        row.token_id = data.tokenId
        row.sys_id = data.tokenId + "@" + vp_hash + "@" + policy_id
        row.verifiable_presentation = vp_hash + "@" + policy_id

        /* row.id = data[i].id
            row.owner = data[i].owner
            row.hash = data[i].hash
            row.document = JSON.stringify(data[i].document)
		    row.policy = policy_id
            row.topic_id = data[i].topicId
            row.message_id = data[i].messageId
            row.schema = data[i].schema
            row.tag = data[i].tag
            row.policy_id = data[i].policyId
            row.hedera_status = data[i].hederaStatus
            row.type = data[i].type
            row.status = (data[i].option ? data[i].option.status : null)
            row.json = JSON.stringify(data[i]) 
            row.sys_id = data[i].hash */
		
        v_table.addRow(row)
    } catch (e) {
        gs.addErrorMessage(JSON.stringify(e))
    }

})(v_table, v_query);]]></script>
        <sys_class_name>sys_script_vtable</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-04 07:47:07</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>dabcf0ae1b09dd10bed02063b24bcb96</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Policy Creator Document</sys_name>
        <sys_package display_value="guardian" source="x_snc_guardian">137920841b2505107eefc912604bcb13</sys_package>
        <sys_policy/>
        <sys_scope display_value="guardian">137920841b2505107eefc912604bcb13</sys_scope>
        <sys_update_name>sys_script_vtable_dabcf0ae1b09dd10bed02063b24bcb96</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-08-04 09:28:14</sys_updated_on>
        <table>x_snc_guardian_st_policy_creator_document</table>
    </sys_script_vtable>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="guardian">137920841b2505107eefc912604bcb13</application>
        <file_path/>
        <instance_id>05ead1f51bd94d94e84d2f8dee4bcbe1</instance_id>
        <instance_name>esgtoken</instance_name>
        <name>sys_script_vtable_dabcf0ae1b09dd10bed02063b24bcb96</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script_vtable"&gt;&lt;sys_script_vtable action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;advanced&gt;false&lt;/advanced&gt;&lt;cache_isolation_level&gt;USER&lt;/cache_isolation_level&gt;&lt;cache_strategy&gt;CACHE_BY_QUERY&lt;/cache_strategy&gt;&lt;cache_ttl&gt;0&lt;/cache_ttl&gt;&lt;name&gt;Policy Creator Document&lt;/name&gt;&lt;script&gt;&lt;![CDATA[(function executeQuery(v_table, v_query) {

    try {
        var u = new GlideRecord("x_snc_guardian_login")
        u.get("user", gs.getUserID())
        var jwt = u.jwt

        var vp_hash, policy_id, xxx
        if (v_query.getParameter("verifiable_presentation")) {
            vp_hash = v_query.getParameter("verifiable_presentation").split("@")[0].toString()
            //gs.addInfoMessage("vp_hash " + vp_hash)
            policy_id = v_query.getParameter("verifiable_presentation").split("@")[1].toString()
            //gs.addInfoMessage("policy_id " + policy_id)
        }

        if (v_query.isGet()) {
            vp_hash = v_query.getSysId().split("@")[0].toString()
            policy_id = v_query.getSysId().split("@")[1].toString()
        }

        var sm = new sn_ws.RESTMessageV2();
        sm.setEndpoint(gs.getProperty("x_snc_guardian.endpoint") + "/policies/" + policy_id + "/tag/trustChainBlock")
        sm.setHttpMethod("get")
        sm.setRequestHeader("authorization", "bearer " + jwt)
        var response = sm.execute()
        var responseBody = response.getBody();
        var httpStatus = response.getStatusCode();

        var body = JSON.parse(responseBody)
        var trustChainBlock_uuid = body.id
        //gs.addInfoMessage("trustChainBlock_uuid " + trustChainBlock_uuid)

        var sm2 = new sn_ws.RESTMessageV2();
        sm2.setEndpoint(gs.getProperty("x_snc_guardian.endpoint") + "/policies/" + policy_id + "/blocks/" + trustChainBlock_uuid)
        sm2.setHttpMethod("post")
        sm2.setRequestHeader("authorization", "bearer " + jwt)
        sm2.setRequestHeader("content-type", "application/json")
        sm2.setRequestBody('{ "filterValue": "' + vp_hash + '" }')
        //gs.addInfoMessage('{ "filterValue": "' + vp_hash + '" }')
        var response2 = sm2.execute()
        var responseBody2 = response2.getBody();
        var httpStatus2 = response2.getStatusCode();
        //gs.addInfoMessage("responseBody2 " + responseBody2)

        var sm3 = new sn_ws.RESTMessageV2();
        sm3.setEndpoint(gs.getProperty("x_snc_guardian.endpoint") + "/policies/" + policy_id + "/blocks/" + trustChainBlock_uuid)
        sm3.setHttpMethod("get")
        sm3.setRequestHeader("authorization", "bearer " + jwt)
        var response3 = sm3.execute()
        var responseBody3 = response3.getBody();
        //gs.addInfoMessage("responseBody3 " + responseBody3)
        var httpStatus3 = response3.getStatusCode();

        var data = JSON.parse(responseBody3).data.mintDocument

        //gs.addInfoMessage(JSON.stringify(JSON.parse(responseBody3).data))

        var row = {}

        //        if (data[i].id == device_id || device_id == undefined || device_id == null) {

        row.token_id = data.tokenId
        row.sys_id = data.tokenId + "@" + vp_hash + "@" + policy_id
        row.verifiable_presentation = vp_hash + "@" + policy_id

        /* row.id = data[i].id
            row.owner = data[i].owner
            row.hash = data[i].hash
            row.document = JSON.stringify(data[i].document)
		    row.policy = policy_id
            row.topic_id = data[i].topicId
            row.message_id = data[i].messageId
            row.schema = data[i].schema
            row.tag = data[i].tag
            row.policy_id = data[i].policyId
            row.hedera_status = data[i].hederaStatus
            row.type = data[i].type
            row.status = (data[i].option ? data[i].option.status : null)
            row.json = JSON.stringify(data[i]) 
            row.sys_id = data[i].hash */
		
        v_table.addRow(row)
    } catch (e) {
        gs.addErrorMessage(JSON.stringify(e))
    }

})(v_table, v_query);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_vtable&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-08-04 07:47:07&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;dabcf0ae1b09dd10bed02063b24bcb96&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;Policy Creator Document&lt;/sys_name&gt;&lt;sys_package display_value="guardian" source="x_snc_guardian"&gt;137920841b2505107eefc912604bcb13&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="guardian"&gt;137920841b2505107eefc912604bcb13&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_vtable_dabcf0ae1b09dd10bed02063b24bcb96&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-08-04 09:28:14&lt;/sys_updated_on&gt;&lt;table&gt;x_snc_guardian_st_policy_creator_document&lt;/table&gt;&lt;/sys_script_vtable&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-60421644</payload_hash>
        <record_name>Policy Creator Document</record_name>
        <reverted_from/>
        <source>d43fb3ed1b789d507eefc912604bcb20</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-04 09:28:14</sys_created_on>
        <sys_id>a7d35da21b89dd10bed02063b24bcb44</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>182682f1e660000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-08-04 09:28:14</sys_updated_on>
        <type>Remote Table</type>
        <update_guid>afd35da2be89dd10fd5cde0233c85443</update_guid>
        <update_guid_history>afd35da2be89dd10fd5cde0233c85443:-60421644,16bcf0aed009dd10902eaab77d6a8698:-960338599</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-04 14:00:08</sys_created_on>
        <sys_db_object display_value="" name="sys_script_vtable">sys_script_vtable</sys_db_object>
        <sys_id>6cd5dc1019ee4d9c96e5f5e8e346bfb9</sys_id>
        <sys_metadata>dabcf0ae1b09dd10bed02063b24bcb96</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Policy Creator Document</sys_name>
        <sys_package display_value="guardian" source="x_snc_guardian">137920841b2505107eefc912604bcb13</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="guardian">137920841b2505107eefc912604bcb13</sys_scope>
        <sys_scope_delete display_value="">05c65a9d69774e5088866e42e238e190</sys_scope_delete>
        <sys_update_name>sys_script_vtable_dabcf0ae1b09dd10bed02063b24bcb96</sys_update_name>
        <sys_update_version display_value="sys_script_vtable_dabcf0ae1b09dd10bed02063b24bcb96">a7d35da21b89dd10bed02063b24bcb44</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-08-04 14:00:08</sys_updated_on>
    </sys_metadata_delete>
</record_update>
